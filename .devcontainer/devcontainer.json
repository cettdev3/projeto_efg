// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.2/containers/docker-existing-docker-compose
// If you want to run as a non-root user in the container, see .devcontainer/docker-compose.yml.
{
    "name": "Existing Docker Compose (Extend)",
    // Update the 'dockerComposeFile' list if you have more compose files or use different names.
    // The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
    "dockerComposeFile": [
        "../docker-compose-develop.yml",
        "../docker-compose.yml",
        "docker-compose.yml"
    ],
    "runArgs": [
        "--env-file",
        "./.env"
    ],
    // The 'service' property is the name of the service for the container that VS Code should
    // use. Update this value and .devcontainer/docker-compose.yml to the real service name.
    "service": "app",
    // The optional 'workspaceFolder' property is the path VS Code should open by default when
    // connected. This is typically a file mount in .devcontainer/docker-compose.yml
    "workspaceFolder": "/home/vscode/app",
    "customizations": {
        "vscode": {
            "settings": {
                "terminal.integrated.profiles.linux": {
                    "bash": {
                        "path": "bash",
                        "icon": "terminal-bash"
                    },
                    "zsh": {
                        "path": "zsh"
                    },
                    "fish": {
                        "path": "fish"
                    },
                    "tmux": {
                        "path": "tmux",
                        "icon": "terminal-tmux"
                    },
                    "pwsh": {
                        "path": "pwsh",
                        "icon": "terminal-powershell"
                    }
                },
                "terminal.integrated.defaultProfile.linux": "zsh",
                "python.languageServer": "Pylance",
                "python.defaultInterpreterPath": "${containerWorkspaceFolder}/.venv/bin/python",
                "python.terminal.activateEnvironment": true,
                "python.analysis.autoSearchPaths": true,
                "python.analysis.indexing": true,
                "python.analysis.autoImportCompletions": true,
                "python.analysis.completeFunctionParens": true,
                "GitHooks.hooksDirectory": "${containerWorkspaceFolder}/.git/hooks",
                    "GitHooks.predefinedHooks": [
                        "post-checkout",
                        "applypatch-msg",
                        "commit-msg",
                        "fsmonitor-watchman",
                        "post-update",
                        "pre-applypatch",
                        "pre-commit",
                        "pre-merge-commit",
                        "pre-push",
                        "pre-rebase",
                        "pre-receive",
                        "prepare-commit-msg",
                        "push-to-checkout",
                        "update"
                    ]
            },
            "extensions": [
                "MS-CEINTL.vscode-language-pack-pt-BR",
                "GitHub.copilot",
                "mhutchie.git-graph",
                "lakshmikanthayyadevara.githooks",
                "ms-vscode-remote.vscode-remote-extensionpack",
                "ms-azuretools.vscode-docker",
                "ms-python.python",
                "donjayamanne.python-extension-pack",
                "charliermarsh.ruff",
                "ms-python.isort",
                // "ms-python.mypy-type-checker",
                "mikestead.dotenv",
                "EditorConfig.EditorConfig",
                "mhutchie.git-graph",
                "yzhang.markdown-all-in-one",
                "ms-python.vscode-pylance"
            ]
        }
    },    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    "forwardPorts": [
        8000,
        "database:3306",
        "dbadmin:80"
    ],
    "portsAttributes": {
        "8000": {
            "label": "Application"
        },
        "database:3306": {
            "label": "Database"
        },
        "dbadmin:80": {
            "label": "Database Web Admin"
        }
    },
    // Uncomment the next line if you want start specific services in your Docker Compose config.
    // "runServices": [],
    // Uncomment the next line if you want to keep your containers running after VS Code shuts down.
    // "shutdownAction": "none",
    // Uncomment the next line to run commands after the container is created - for example installing curl.
    "postCreateCommand": "if [ -s Pipfile.lock ]; then pipenv install --system; else pipenv lock && pipenv install --system; fi",
    // Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
    "remoteUser": "vscode",
    "updateRemoteUserUID": true,
    "features": {
        "ghcr.io/devcontainers-contrib/features/pipenv:2": {
            "version": "latest"
        },
        "ghcr.io/devcontainers-contrib/features/ruff:1": {
            "version": "latest"
        },
        "ghcr.io/devcontainers-contrib/features/zsh-plugins:0": {
            "plugins": "ssh-agent npm",
            "omzPlugins": "https://github.com/zsh-users/zsh-autosuggestions",
            "username": "vscode"
        }
    }
}